{"ast":null,"code":"import _classCallCheck from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/oday_data/react/my-app/src/component/employeeTable.jsx\";\nimport React, { Component } from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nvar rowTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(rowTable, _Component);\n\n  function rowTable() {\n    _classCallCheck(this, rowTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(rowTable).apply(this, arguments));\n  }\n\n  _createClass(rowTable, [{\n    key: \"ColorBlock\",\n    value: function ColorBlock() {\n      var styles = {\n        'margin': '5px 20px 0px 20px',\n        'width': '50%'\n      };\n      return styles;\n    }\n  }, {\n    key: \"createHeaderRow\",\n    value: function createHeaderRow() {\n      return React.createElement(\"thead\", {\n        className: \"thead-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" id \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \" name \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" age \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"  \")));\n    }\n  }, {\n    key: \"tableStyle\",\n    value: function tableStyle() {\n      var classes = \"table table-sm table-striped table-hover table-bordered\";\n      return classes;\n    }\n  }, {\n    key: \"emptyStyle\",\n    value: function emptyStyle() {\n      var styles = {\n        'text-align': 'center'\n      };\n      return styles;\n    }\n  }, {\n    key: \"createRow\",\n    value: function createRow() {\n      if (this.props.data.length === 0) return React.createElement(\"tr\", {\n        style: this.emptyStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"  \", React.createElement(\"td\", {\n        colSpan: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"No Data Found\"));\n      return this.props.data.map(function (data) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, data.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, data.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, data.age), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-sm btn-primary m-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"btn btn-sm btn-danger m-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.data);\n      var options = {\n        page: 2,\n        // which page you want to show as default\n        sizePerPageList: [{\n          text: '5',\n          value: 5\n        }, {\n          text: '10',\n          value: 10\n        }, {\n          text: 'All',\n          value: this.props.data.length\n        }],\n        // you can change the dropdown list for size per page\n        sizePerPage: 5,\n        // which size per page you want to locate as default\n        pageStartIndex: 0,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        prePage: 'Prev',\n        // Previous page button text\n        nextPage: 'Next',\n        // Next page button text\n        firstPage: 'First',\n        // First page button text\n        lastPage: 'Last',\n        // Last page button text\n        paginationPosition: 'top' // default is bottom, top and both is all available\n        // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n        // alwaysShowAllBtns: true // Always show next and previous button\n        // withFirstAndLast: false > Hide the going to First and Last page button\n\n      };\n      return React.createElement(\"div\", {\n        className: \"table-responsive-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.data,\n        pagination: true,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Employe eID\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Employe Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"age\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Employe Price\")));\n    }\n  }]);\n\n  return rowTable;\n}(Component);\n\nexport default rowTable;","map":{"version":3,"sources":["/home/user/oday_data/react/my-app/src/component/employeeTable.jsx"],"names":["React","Component","BootstrapTable","TableHeaderColumn","rowTable","styles","classes","props","data","length","emptyStyle","map","id","name","age","console","log","options","page","sizePerPageList","text","value","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationPosition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nclass rowTable extends Component {\n    \n\n    ColorBlock() {\n        let styles = {\n            'margin': '5px 20px 0px 20px',\n            'width': '50%'\n        }\n        return styles;\n    };\n\n    createHeaderRow () {\n        return (\n            <thead className=\"thead-dark\">\n                <tr>\n                    <th> id </th>\n                    <th> name </th>\n                    <th> age </th>\n                    <th>  </th>\n                </tr>\n            </thead>\n        )\n    };\n\n    tableStyle () {\n        let classes = \"table table-sm table-striped table-hover table-bordered\";\n\n        return classes;\n    }\n\n    emptyStyle () {\n        let styles = {\n            'text-align': 'center'\n          }\n          return styles;        \n    }\n\n    createRow () {\n        if (this.props.data.length === 0) return <tr  style = {this.emptyStyle()}>  <td colSpan={3}>No Data Found</td></tr> ;\n        return (\n            \n                this.props.data.map(data => \n                                      <React.Fragment>\n                                       <tr>\n                                        <td>{data.id}</td>\n                                        <td>{data.name}</td>\n                                        <td>{data.age}</td>\n                                        <td>\n                                            <button className=\"btn btn-sm btn-primary m-2\">Edit</button>\n                                            <button className=\"btn btn-sm btn-danger m-2\">Delete</button>\n                                        </td>\n                                        </tr>\n                                    </React.Fragment>\n                                    ) \n                \n       \n        )\n    };\n\n    render() { \n        console.log(this.props.data);\n        const options = {\n            page: 2,  // which page you want to show as default\n            sizePerPageList: [ {\n              text: '5', value: 5\n            }, {\n              text: '10', value: 10\n            }, {\n              text: 'All', value: this.props.data.length\n            } ], // you can change the dropdown list for size per page\n            sizePerPage: 5,  // which size per page you want to locate as default\n            pageStartIndex: 0, // where to start counting the pages\n            paginationSize: 3,  // the pagination bar size.\n            prePage: 'Prev', // Previous page button text\n            nextPage: 'Next', // Next page button text\n            firstPage: 'First', // First page button text\n            lastPage: 'Last', // Last page button text\n            paginationPosition: 'top'  // default is bottom, top and both is all available\n            // hideSizePerPage: true > You can hide the dropdown for sizePerPage\n            // alwaysShowAllBtns: true // Always show next and previous button\n            // withFirstAndLast: false > Hide the going to First and Last page button\n          };\n\n\n\n        return ( \n                 <div className=\"table-responsive-sm\">\n                     <BootstrapTable data={ this.props.data } pagination={ true } options={ options }>\n                        <TableHeaderColumn dataField='id' isKey>Employe eID</TableHeaderColumn>\n                        <TableHeaderColumn dataField='name'>Employe Name</TableHeaderColumn>\n                        <TableHeaderColumn dataField='age' isKey>Employe Price</TableHeaderColumn>\n                    </BootstrapTable>\n                </div>\n         );\n    }\n}\n \nexport  default rowTable;"]},"metadata":{},"sourceType":"module"}