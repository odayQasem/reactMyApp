{"ast":null,"code":"import _classCallCheck from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/oday_data/react/my-app/src/component/tableBootstrap.jsx\";\nimport React, { Component } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nfunction getCaret(direction) {\n  if (direction === \"asc\") {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \" asc\");\n  }\n\n  if (direction === \"desc\") {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \" desc\");\n  }\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" asc/desc\");\n}\n\nfunction onRowSelect(row, isSelected, e) {\n  var rowStr = \"\";\n\n  for (var prop in row) {\n    rowStr += prop + ': \"' + row[prop] + '\"';\n  }\n\n  console.log(e);\n  alert(\"is selected: \".concat(isSelected, \", \").concat(rowStr));\n}\n\nfunction onSelectAll(isSelected, rows) {\n  alert(\"is select all: \".concat(isSelected));\n\n  if (isSelected) {\n    alert(\"Current display and selected data: \");\n  } else {\n    alert(\"unselect rows: \");\n  }\n\n  for (var i = 0; i < rows.length; i++) {\n    alert(rows[i].id);\n  }\n} // function customConfirm(next, dropRowKeys) {\n//   const dropRowKeysStr = dropRowKeys.join(',');\n//   if (confirm('Are you sure you want to delete ${dropRowKeysStr}?')) {\n//     // If the confirmation is true, call the function that\n//     // continues the deletion of the record.\n//     next();\n//   }\n// }\n\n\nvar rowTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(rowTable, _Component);\n\n  function rowTable(props) {\n    var _this;\n\n    _classCallCheck(this, rowTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(rowTable).call(this, props));\n\n    _this.onAfterDeleteRow = function (rowKeys) {\n      _this.props.onAfterDeleteRow(rowKeys);\n    };\n\n    _this.onBeforeSaveCell = function (row, cellName, cellValue) {\n      alert(\"oday\");\n\n      _this.props.onBeforeSaveCell(row, cellName, cellValue);\n    };\n\n    _this.onAfterSaveCell = function (row, cellName, cellValue) {\n      alert(\"Save cell \".concat(cellName, \" with value \").concat(cellValue));\n      var rowStr = \"\";\n\n      for (var prop in row) {\n        rowStr += prop + \": \" + row[prop] + \"\\n\";\n      }\n\n      alert(\"Thw whole row :\\n\" + rowStr);\n    };\n\n    _this.onAfterInsertRow = function (row) {\n      var newRowStr = \"\";\n\n      for (var prop in row) {\n        newRowStr += prop + \": \" + row[prop] + \" \\n\";\n      }\n\n      alert(\"The new row is:\\n \" + newRowStr);\n    };\n\n    _this.createCustomModalFooter = function (onClose, onSave) {\n      var style = {\n        backgroundColor: \"#ffffff\"\n      };\n      return React.createElement(\"div\", {\n        className: \"modal-footer\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-xs btn-info\",\n        onClick: onSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"button\", {\n        className: \"btn btn-xs btn-danger\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Close\", \" \"));\n    };\n\n    _this.createCustomClearButton = function (onClick) {\n      return React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        style: _this.ColorBlock(),\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Clean\");\n    };\n\n    _this.options = {\n      defaultSortName: \"name\",\n      // default sort column name\n      defaultSortOrder: \"desc\",\n      // default sort order\n      onSortChange: _this.onSortChange,\n      afterInsertRow: _this.onAfterInsertRow,\n      afterDeleteRow: _this.onAfterDeleteRow,\n      beforeSaveCell: _this.onBeforeSaveCell,\n      // a hook for before saving cell\n      afterSaveCell: _this.onAfterSaveCell,\n      // a hook for after saving cell\n      insertModalHeader: _this.createCustomModalHeader,\n      insertModalFooter: _this.createCustomModalFooter,\n      clearSearchBtn: _this.createCustomClearButton,\n      clearSearch: true\n    };\n    return _this;\n  }\n\n  _createClass(rowTable, [{\n    key: \"onSortChange\",\n    value: function onSortChange(sortName, sortOrder) {\n      console.info(\"onSortChange\", arguments);\n    }\n  }, {\n    key: \"ColorBlock\",\n    value: function ColorBlock() {\n      var styles = {\n        height: \"84%\"\n      };\n      return styles;\n    }\n  }, {\n    key: \"createCustomModalHeader\",\n    value: function createCustomModalHeader(onClose, onSave) {\n      var headerStyle = {\n        fontWeight: \"bold\",\n        fontSize: \"large\",\n        textAlign: \"center\",\n        backgroundColor: \"#eeeeee\"\n      };\n      return React.createElement(\"div\", {\n        className: \"modal-header\",\n        style: headerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Add Employee\"), React.createElement(\"button\", {\n        className: \"btn btn-info\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Close it!\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cellEditProp = {\n        mode: \"click\",\n        blurToSave: true,\n        beforeSaveCell: this.onBeforeSaveCell,\n        // a hook for before saving cell\n        afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n\n      };\n      var selectRowProp = {\n        mode: \"checkbox\",\n        clickToSelect: true,\n        //unselectable: [ 1, 3 ],\n        showOnlySelected: true,\n        selected: [2],\n        onSelect: onRowSelect,\n        onSelectAll: onSelectAll,\n        bgColor: function bgColor(row, isSelect) {\n          return \"yellow\"; // if (isSelect) {\n          //   const { id } = row;\n          //   if (id < 5) return 'yellow';\n          //   else if (id < 4) return 'red';\n          //   else return 'yellow';\n          // }\n          // return null;\n        }\n      };\n      var classes = \"table table-sm table-striped table-hover table-bordered\";\n      return React.createElement(\"div\", {\n        className: \"table-responsive-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        selectRow: selectRowProp,\n        tableHeaderClass: this.classes,\n        trClassName: this.classes,\n        TableHeaderColumn: this.classes,\n        tableBodyClass: this.classes,\n        containerClass: this.classes,\n        tableContainerClass: this.classes,\n        headerContainerClass: this.classes,\n        bodyContainerClass: this.classes,\n        cellEdit: cellEditProp,\n        multiColumnSort: 2,\n        options: this.options,\n        search: true,\n        deleteRow: true,\n        insertRow: true,\n        data: this.props.data,\n        striped: true,\n        hover: true,\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        autoValue: true,\n        width: \"90\",\n        tdStyle: {\n          whiteSpace: \"normal\"\n        },\n        thStyle: {\n          fontWeight: \"lighter\"\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        isKey: true,\n        dataField: \"id\",\n        caretRender: getCaret,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Employee ID\"), React.createElement(TableHeaderColumn, {\n        width: \"200\",\n        tdStyle: {\n          whiteSpace: \"normal\"\n        },\n        thStyle: {\n          fontWeight: \"lighter\"\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        filter: {\n          type: \"TextFilter\",\n          delay: 500\n        },\n        dataField: \"name\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Employee Name\"), React.createElement(TableHeaderColumn, {\n        width: \"150\",\n        tdStyle: {\n          whiteSpace: \"normal\"\n        },\n        thStyle: {\n          fontWeight: \"lighter\"\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        filter: {\n          type: \"TextFilter\",\n          delay: 1000,\n          numberComparators: [\"=\", \">\", \"<=\"]\n        },\n        dataField: \"age\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Employee Age\"), React.createElement(TableHeaderColumn, {\n        width: \"150\",\n        dataField: \"active\",\n        editable: {\n          type: \"checkbox\",\n          options: {\n            values: \"Active:InActive\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Active\")));\n    }\n  }]);\n\n  return rowTable;\n}(Component);\n\nexport default rowTable;","map":{"version":3,"sources":["/home/user/oday_data/react/my-app/src/component/tableBootstrap.jsx"],"names":["React","Component","BootstrapTable","TableHeaderColumn","getCaret","direction","onRowSelect","row","isSelected","e","rowStr","prop","console","log","alert","onSelectAll","rows","i","length","id","rowTable","props","onAfterDeleteRow","rowKeys","onBeforeSaveCell","cellName","cellValue","onAfterSaveCell","onAfterInsertRow","newRowStr","createCustomModalFooter","onClose","onSave","style","backgroundColor","createCustomClearButton","onClick","ColorBlock","options","defaultSortName","defaultSortOrder","onSortChange","afterInsertRow","afterDeleteRow","beforeSaveCell","afterSaveCell","insertModalHeader","createCustomModalHeader","insertModalFooter","clearSearchBtn","clearSearch","sortName","sortOrder","info","arguments","styles","height","headerStyle","fontWeight","fontSize","textAlign","cellEditProp","mode","blurToSave","selectRowProp","clickToSelect","showOnlySelected","selected","onSelect","bgColor","isSelect","classes","data","whiteSpace","type","delay","numberComparators","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nfunction getCaret(direction) {\n  if (direction === \"asc\") {\n    return <span> asc</span>;\n  }\n  if (direction === \"desc\") {\n    return <span> desc</span>;\n  }\n  return <span> asc/desc</span>;\n}\n\n\n\nfunction onRowSelect(row, isSelected, e) {\n  let rowStr = \"\";\n  for (const prop in row) {\n    rowStr += prop + ': \"' + row[prop] + '\"';\n  }\n  console.log(e);\n  alert(`is selected: ${isSelected}, ${rowStr}`);\n}\n\nfunction onSelectAll(isSelected, rows) {\n  alert(`is select all: ${isSelected}`);\n  if (isSelected) {\n    alert(\"Current display and selected data: \");\n  } else {\n    alert(\"unselect rows: \");\n  }\n  for (let i = 0; i < rows.length; i++) {\n    alert(rows[i].id);\n  }\n}\n\n\n\n// function customConfirm(next, dropRowKeys) {\n//   const dropRowKeysStr = dropRowKeys.join(',');\n//   if (confirm('Are you sure you want to delete ${dropRowKeysStr}?')) {\n//     // If the confirmation is true, call the function that\n//     // continues the deletion of the record.\n//     next();\n//   }\n// }\n\n\n\n\nclass rowTable extends Component {\n\n  onAfterDeleteRow = rowKeys => {\n    this.props.onAfterDeleteRow(rowKeys);\n  };\n\n  onBeforeSaveCell = (row, cellName, cellValue) => {\n    alert(\"oday\");\n    this.props.onBeforeSaveCell(row,cellName,cellValue);\n  };\n\n  onAfterSaveCell = (row, cellName, cellValue) => {\n    alert(`Save cell ${cellName} with value ${cellValue}`);\n  \n    let rowStr = \"\";\n    for (const prop in row) {\n      rowStr += prop + \": \" + row[prop] + \"\\n\";\n    }\n  \n    alert(\"Thw whole row :\\n\" + rowStr);\n  }\n\n  onAfterInsertRow = (row) => {\n    let newRowStr = \"\";\n  \n    for (const prop in row) {\n      newRowStr += prop + \": \" + row[prop] + \" \\n\";\n    }\n    alert(\"The new row is:\\n \" + newRowStr);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.options = {\n      defaultSortName: \"name\", // default sort column name\n      defaultSortOrder: \"desc\", // default sort order\n      onSortChange: this.onSortChange,\n      afterInsertRow: this.onAfterInsertRow,\n      afterDeleteRow: this.onAfterDeleteRow,\n      beforeSaveCell: this.onBeforeSaveCell, // a hook for before saving cell\n      afterSaveCell: this.onAfterSaveCell, // a hook for after saving cell\n      insertModalHeader: this.createCustomModalHeader,\n      insertModalFooter: this.createCustomModalFooter,\n      clearSearchBtn: this.createCustomClearButton,\n      clearSearch: true\n    };\n  }\n\n  onSortChange(sortName, sortOrder) {\n    console.info(\"onSortChange\", arguments);\n  }\n\n  createCustomModalFooter = (onClose, onSave) => {\n    const style = {\n      backgroundColor: \"#ffffff\"\n    };\n    return (\n      <div className=\"modal-footer\" style={style}>\n        <button className=\"btn btn-xs btn-info\" onClick={onSave}>\n          Add\n        </button>\n        <button className=\"btn btn-xs btn-danger\" onClick={onClose}>\n          Close{\" \"}\n        </button>\n      </div>\n    );\n  };\n\n  ColorBlock() {\n    let styles = {\n      height: \"84%\"\n    };\n    return styles;\n  }\n\n  createCustomClearButton = onClick => {\n    return (\n      <button\n        className=\"btn btn-info\"\n        style={this.ColorBlock()}\n        onClick={onClick}\n      >\n        Clean\n      </button>\n    );\n  };\n\n  createCustomModalHeader(onClose, onSave) {\n    const headerStyle = {\n      fontWeight: \"bold\",\n      fontSize: \"large\",\n      textAlign: \"center\",\n      backgroundColor: \"#eeeeee\"\n    };\n    return (\n      <div className=\"modal-header\" style={headerStyle}>\n        <h3>Add Employee</h3>\n        <button className=\"btn btn-info\" onClick={onClose}>\n          Close it!\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    const cellEditProp = {\n      mode: \"click\",\n      blurToSave: true,\n      beforeSaveCell: this.onBeforeSaveCell, // a hook for before saving cell\n      afterSaveCell: this.onAfterSaveCell // a hook for after saving cell\n    };\n\n    const selectRowProp = {\n      mode: \"checkbox\",\n      clickToSelect: true,\n      //unselectable: [ 1, 3 ],\n      showOnlySelected: true,\n      selected: [2],\n      onSelect: onRowSelect,\n      onSelectAll: onSelectAll,\n      bgColor: function(row, isSelect) {\n        return \"yellow\";\n        // if (isSelect) {\n        //   const { id } = row;\n        //   if (id < 5) return 'yellow';\n        //   else if (id < 4) return 'red';\n        //   else return 'yellow';\n        // }\n        // return null;\n      }\n    };\n\n    let classes = \"table table-sm table-striped table-hover table-bordered\";\n\n    return (\n      <div className=\"table-responsive-sm\">\n        {/* <button onClick={ this.handleBtnClick } className='btn btn-default'>Click to apply text filter</button> */}\n        <BootstrapTable\n          selectRow={selectRowProp}\n          tableHeaderClass={this.classes}\n          trClassName={this.classes}\n          TableHeaderColumn={this.classes}\n          tableBodyClass={this.classes}\n          containerClass={this.classes}\n          tableContainerClass={this.classes}\n          headerContainerClass={this.classes}\n          bodyContainerClass={this.classes}\n          cellEdit={cellEditProp}\n          multiColumnSort={2}\n          options={this.options}\n          search={true}\n          deleteRow={true}\n          insertRow={true}\n          data={this.props.data}\n          striped\n          hover\n          pagination\n        >\n          <TableHeaderColumn\n            autoValue={true}\n            width=\"90\"\n            tdStyle={{ whiteSpace: \"normal\" }}\n            thStyle={{ fontWeight: \"lighter\" }}\n            headerAlign=\"center\"\n            dataAlign=\"center\"\n            isKey\n            dataField=\"id\"\n            caretRender={getCaret}\n            dataSort\n          >\n            Employee ID\n          </TableHeaderColumn>\n          {/* <TableHeaderColumn  hiddenOnInsert                 width='200' tdStyle={ { whiteSpace: 'normal' } } thStyle={ { 'fontWeight': 'lighter' } } headerAlign='center' dataAlign='center' filter={ { type: 'TextFilter', delay: 500 }} dataField='name' dataSort>Employee Name</TableHeaderColumn> */}\n          <TableHeaderColumn\n            width=\"200\"\n            tdStyle={{ whiteSpace: \"normal\" }}\n            thStyle={{ fontWeight: \"lighter\" }}\n            headerAlign=\"center\"\n            dataAlign=\"center\"\n            filter={{ type: \"TextFilter\", delay: 500 }}\n            dataField=\"name\"\n            dataSort\n          >\n            Employee Name\n          </TableHeaderColumn>\n          <TableHeaderColumn\n            width=\"150\"\n            tdStyle={{ whiteSpace: \"normal\" }}\n            thStyle={{ fontWeight: \"lighter\" }}\n            headerAlign=\"center\"\n            dataAlign=\"center\"\n            filter={{\n              type: \"TextFilter\",\n              delay: 1000,\n              numberComparators: [\"=\", \">\", \"<=\"]\n            }}\n            dataField=\"age\"\n            dataSort\n          >\n            Employee Age\n          </TableHeaderColumn>\n          <TableHeaderColumn\n            width=\"150\"\n            dataField=\"active\"\n            editable={{\n              type: \"checkbox\",\n              options: { values: \"Active:InActive\" }\n            }}\n          >\n            Active\n          </TableHeaderColumn>\n        </BootstrapTable>\n      </div>\n    );\n  }\n}\n\nexport default rowTable;\n"]},"metadata":{},"sourceType":"module"}