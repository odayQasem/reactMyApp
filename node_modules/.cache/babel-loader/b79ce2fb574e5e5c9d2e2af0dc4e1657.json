{"ast":null,"code":"import _classCallCheck from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/oday_data/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/oday_data/react/my-app/src/component/tableBootstrap.jsx\";\nimport React, { Component } from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\n\nfunction getCaret(direction) {\n  if (direction === 'asc') {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \" asc\");\n  }\n\n  if (direction === 'desc') {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" desc\");\n  }\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" asc/desc\");\n}\n\nfunction onAfterInsertRow(row) {\n  var newRowStr = '';\n\n  for (var prop in row) {\n    newRowStr += prop + ': ' + row[prop] + ' \\n';\n  }\n\n  alert('The new row is:\\n ' + newRowStr);\n}\n\nfunction onRowSelect(row, isSelected, e) {\n  var rowStr = '';\n\n  for (var prop in row) {\n    rowStr += prop + ': \"' + row[prop] + '\"';\n  }\n\n  console.log(e);\n  alert(\"is selected: \".concat(isSelected, \", \").concat(rowStr));\n}\n\nfunction onSelectAll(isSelected, rows) {\n  alert(\"is select all: \".concat(isSelected));\n\n  if (isSelected) {\n    alert('Current display and selected data: ');\n  } else {\n    alert('unselect rows: ');\n  }\n\n  for (var i = 0; i < rows.length; i++) {\n    alert(rows[i].id);\n  }\n}\n\nfunction onAfterDeleteRow(rowKeys) {\n  alert('The rowkey you drop: ' + rowKeys);\n}\n\nfunction onAfterSaveCell(row, cellName, cellValue) {\n  alert(\"Save cell \".concat(cellName, \" with value \").concat(cellValue));\n  var rowStr = '';\n\n  for (var prop in row) {\n    rowStr += prop + ': ' + row[prop] + '\\n';\n  }\n\n  alert('Thw whole row :\\n' + rowStr);\n}\n\nfunction onBeforeSaveCell(row, cellName, cellValue) {\n  // You can do any validation on here for editing value,\n  // return false for reject the editing\n  return true;\n}\n\nvar rowTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(rowTable, _Component);\n\n  function rowTable(props) {\n    var _this;\n\n    _classCallCheck(this, rowTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(rowTable).call(this, props));\n    _this.options = {\n      defaultSortName: 'age',\n      // default sort column name\n      defaultSortOrder: 'desc',\n      // default sort order\n      onSortChange: _this.onSortChange,\n      afterInsertRow: onAfterInsertRow,\n      afterDeleteRow: onAfterDeleteRow,\n      clearSearch: true\n    };\n    return _this;\n  }\n\n  _createClass(rowTable, [{\n    key: \"onSortChange\",\n    value: function onSortChange(sortName, sortOrder) {\n      console.info('onSortChange', arguments);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cellEditProp = {\n        mode: 'click'\n      };\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        unselectable: [1, 3],\n        selected: [2],\n        onSelect: onRowSelect,\n        onSelectAll: onSelectAll,\n        bgColor: function bgColor(row, isSelect) {\n          return 'yellow'; // if (isSelect) {\n          //   const { id } = row;\n          //   if (id < 5) return 'yellow';\n          //   else if (id < 4) return 'red';\n          //   else return 'yellow';\n          // }\n          // return null;\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        selectRow: selectRowProp,\n        cellEdit: cellEditProp,\n        multiColumnSort: 2,\n        options: this.options,\n        search: true,\n        deleteRow: true,\n        insertRow: true,\n        data: this.props.data,\n        striped: true,\n        hover: true,\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: \"90\",\n        tdStyle: {\n          whiteSpace: 'normal'\n        },\n        thStyle: {\n          'fontWeight': 'lighter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        isKey: true,\n        dataField: \"id\",\n        caretRender: getCaret,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Product ID\"), React.createElement(TableHeaderColumn, {\n        width: \"200\",\n        tdStyle: {\n          whiteSpace: 'normal'\n        },\n        thStyle: {\n          'fontWeight': 'lighter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        filter: {\n          type: 'TextFilter',\n          delay: 500\n        },\n        dataField: \"name\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Product Name\"), React.createElement(TableHeaderColumn, {\n        width: \"150\",\n        tdStyle: {\n          whiteSpace: 'normal'\n        },\n        thStyle: {\n          'fontWeight': 'lighter'\n        },\n        headerAlign: \"center\",\n        dataAlign: \"center\",\n        filter: {\n          type: 'NumberFilter',\n          delay: 1000,\n          numberComparators: ['=', '>', '<=']\n        },\n        dataField: \"age\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Product Price\")));\n    }\n  }]);\n\n  return rowTable;\n}(Component);\n\nexport default rowTable;","map":{"version":3,"sources":["/home/user/oday_data/react/my-app/src/component/tableBootstrap.jsx"],"names":["React","Component","BootstrapTable","TableHeaderColumn","getCaret","direction","onAfterInsertRow","row","newRowStr","prop","alert","onRowSelect","isSelected","e","rowStr","console","log","onSelectAll","rows","i","length","id","onAfterDeleteRow","rowKeys","onAfterSaveCell","cellName","cellValue","onBeforeSaveCell","rowTable","props","options","defaultSortName","defaultSortOrder","onSortChange","afterInsertRow","afterDeleteRow","clearSearch","sortName","sortOrder","info","arguments","cellEditProp","mode","selectRowProp","clickToSelect","unselectable","selected","onSelect","bgColor","isSelect","data","whiteSpace","type","delay","numberComparators"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css'\n\nfunction getCaret(direction) {\n    if (direction === 'asc') {\n      return (\n        <span> asc</span>\n      );\n    }\n    if (direction === 'desc') {\n      return (\n        <span> desc</span>\n      );\n    }\n    return (\n      <span> asc/desc</span>\n    );\n  }\n\n  function onAfterInsertRow(row) {\n    let newRowStr = '';\n  \n    for (const prop in row) {\n      newRowStr += prop + ': ' + row[prop] + ' \\n';\n    }\n    alert('The new row is:\\n ' + newRowStr);\n  }\n\n  function onRowSelect(row, isSelected, e) {\n    let rowStr = '';\n    for (const prop in row) {\n      rowStr += prop + ': \"' + row[prop] + '\"';\n    }\n    console.log(e);\n    alert(`is selected: ${isSelected}, ${rowStr}`);\n  }\n  \n  function onSelectAll(isSelected, rows) {\n    alert(`is select all: ${isSelected}`);\n    if (isSelected) {\n      alert('Current display and selected data: ');\n    } else {\n      alert('unselect rows: ');\n    }\n    for (let i = 0; i < rows.length; i++) {\n      alert(rows[i].id);\n    }\n  }\n\n  function onAfterDeleteRow(rowKeys) {\n    alert('The rowkey you drop: ' + rowKeys);\n  }\n\n\nfunction onAfterSaveCell(row, cellName, cellValue) {\n    alert(`Save cell ${cellName} with value ${cellValue}`);\n  \n    let rowStr = '';\n    for (const prop in row) {\n      rowStr += prop + ': ' + row[prop] + '\\n';\n    }\n  \n    alert('Thw whole row :\\n' + rowStr);\n  }\n  \n  function onBeforeSaveCell(row, cellName, cellValue) {\n    // You can do any validation on here for editing value,\n    // return false for reject the editing\n    return true;\n  }\n  \n\nclass rowTable extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.options = {\n          defaultSortName: 'age',  // default sort column name\n          defaultSortOrder: 'desc',  // default sort order\n          onSortChange: this.onSortChange,\n          afterInsertRow: onAfterInsertRow ,\n          afterDeleteRow: onAfterDeleteRow,\n          clearSearch: true\n        };\n     }\n\n\n    onSortChange(sortName, sortOrder) {\n        console.info('onSortChange', arguments);\n    }\n    \n    \n    render() { \n    \n          const cellEditProp = {\n            mode: 'click'\n          };\n          \n          const selectRowProp = {\n            mode: 'checkbox',\n            clickToSelect: true,\n            unselectable: [ 1, 3 ],\n            selected: [2],\n            onSelect: onRowSelect,\n            onSelectAll: onSelectAll,\n            bgColor: function(row, isSelect) {\n                return 'yellow';\n                // if (isSelect) {\n                //   const { id } = row;\n                //   if (id < 5) return 'yellow';\n                //   else if (id < 4) return 'red';\n                //   else return 'yellow';\n                // }\n                // return null;\n              }\n          };\n\n        return ( \n            <div>\n                {/* <button onClick={ this.handleBtnClick } className='btn btn-default'>Click to apply text filter</button> */}\n                <BootstrapTable selectRow={ selectRowProp } cellEdit={ cellEditProp }   multiColumnSort={ 2 }\n                                options={ this.options } search={ true }\n                                deleteRow={ true } insertRow={ true }\n                                data={this.props.data} striped hover  pagination >\n                <TableHeaderColumn width='90'  tdStyle={ { whiteSpace: 'normal' } } thStyle={ { 'fontWeight': 'lighter' } } headerAlign='center' dataAlign='center' isKey dataField='id' caretRender={ getCaret } dataSort>Product ID</TableHeaderColumn>\n                <TableHeaderColumn width='200' tdStyle={ { whiteSpace: 'normal' } } thStyle={ { 'fontWeight': 'lighter' } } headerAlign='center' dataAlign='center' filter={ { type: 'TextFilter', delay: 500 }} dataField='name' dataSort>Product Name</TableHeaderColumn>\n                <TableHeaderColumn width='150' tdStyle={ { whiteSpace: 'normal' } } thStyle={ { 'fontWeight': 'lighter' } } headerAlign='center' dataAlign='center' filter={ { type: 'NumberFilter', delay: 1000, numberComparators: [ '=', '>', '<=' ] } } dataField='age' dataSort>Product Price</TableHeaderColumn>\n                 </BootstrapTable>\n        </div>\n         );\n    }\n}\n \nexport  default rowTable;"]},"metadata":{},"sourceType":"module"}